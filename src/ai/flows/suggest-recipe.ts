// This file is generated by Firebase Studio.
'use server';

/**
 * @fileOverview A recipe suggestion AI agent that suggests recipes based on ingredients, calorie count, and dietary restrictions.
 *
 * - suggestRecipe - A function that handles the recipe suggestion process.
 * - SuggestRecipeInput - The input type for the suggestRecipe function.
 * - SuggestRecipeOutput - The return type for the suggestRecipe function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const SuggestRecipeInputSchema = z.object({
  ingredients: z
    .string()
    .describe('A comma-separated list of ingredients available to use in the recipe.'),
  maxCalories: z
    .number()
    .describe('The maximum number of calories the recipe should contain.'),
  dietaryRestrictions: z
    .string()
    .optional()
    .describe('Any dietary restrictions, e.g., vegan, gluten-free, low-carb.'),
});
export type SuggestRecipeInput = z.infer<typeof SuggestRecipeInputSchema>;

const SuggestRecipeOutputSchema = z.object({
  recipeName: z.string().describe('The name of the suggested recipe.'),
  ingredients: z.string().describe('A list of ingredients required for the recipe, including quantities.'),
  instructions: z.string().describe('Step-by-step instructions for preparing the recipe.'),
  totalCalories: z.number().describe('The total calorie count of the recipe.'),
});
export type SuggestRecipeOutput = z.infer<typeof SuggestRecipeOutputSchema>;

export async function suggestRecipe(input: SuggestRecipeInput): Promise<SuggestRecipeOutput> {
  return suggestRecipeFlow(input);
}

const prompt = ai.definePrompt({
  name: 'suggestRecipePrompt',
  input: {schema: SuggestRecipeInputSchema},
  output: {schema: SuggestRecipeOutputSchema},
  prompt: `You are a recipe suggestion bot. A user will provide you with a list of ingredients they have, a maximum calorie count for the recipe{{#if dietaryRestrictions}}, and specific dietary restrictions{{/if}}.

You will respond with a recipe using those ingredients that stays within the calorie limit{{#if dietaryRestrictions}} and adheres to the following dietary restrictions: {{{dietaryRestrictions}}}{{/if}}.
The recipe should include a name, a list of ingredients (including quantities), step-by-step instructions, and the total calorie count.

Ingredients: {{{ingredients}}}
Maximum Calories: {{{maxCalories}}}
{{#if dietaryRestrictions}}
Dietary Restrictions: {{{dietaryRestrictions}}}
{{/if}}
`,
});

const suggestRecipeFlow = ai.defineFlow(
  {
    name: 'suggestRecipeFlow',
    inputSchema: SuggestRecipeInputSchema,
    outputSchema: SuggestRecipeOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
